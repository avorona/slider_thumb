/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "js/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// send request\n// initialize slider\n// inititalize thumbnails\n// add navigation\n// add loader\n// check for reusable\n// +bonus: add smooth fade in/ fade out \n// +bonus create buttons on the fly\n\n\ndocument.addEventListener('DOMContentLoaded', function (event) {\n\n  var app = {\n\n    initialize: function initialize(settings) {\n\n      var gallery = new Gallery(settings);\n\n      gallery.initialize();\n    }\n\n    // getGallery: function(gallery) {\n\n    //   gallery.getData();\n\n    //   console.log('getGallery');\n    // },\n\n    // showGallery: function(galleryData) {\n\n    //   let gallery = galleryData;\n    //   console.log('showGallery');\n\n    //   gallery.showData();\n\n\n    // }\n\n\n  };\n\n  app.initialize({\n\n    galleryAmount: '10',\n    galleryItemSelector: '.js-gallery-item',\n    prevSlide: 'js-gallery-prev',\n    nextSlide: 'js-gallery-next',\n    container: '.js-gallery-wrap',\n    gallery: 'js-gallery',\n\n    thumbs: true\n    // loader: true,\n    // fullScreenMode: true\n\n  });\n\n  app.initialize({\n\n    galleryAmount: '100',\n    galleryItemSelector: '.js-gallery-item',\n    prevSlide: 'js-gallery-prev',\n    nextSlide: 'js-gallery-next',\n    container: '.js-gallery-wrap2',\n    gallery: 'js-gallery',\n\n    thumbs: true\n    // loader: true,\n    // fullScreenMode: true\n\n  });\n});\n\nfunction Gallery(settings) {\n\n  this.settings = settings;\n  this.id = 0;\n  this.dataAmount = settings.galleryAmount;\n  this.data = [];\n  this.galleryWrapper = settings.container;\n  this.gallery = settings.gallery;\n  this.galleryItemToSlide = settings.galleryItemSelector;\n  this.prevSlideBtn = 'js-gallery-prev' || settings.prevSlide;\n  this.nextSlideBtn = 'js-gallery-next' || settings.nextSlide;\n  this.currentSlide = 0 || settings.initialSlide;\n  this.self.currentIndexndex = 0;\n  this.thumbsHeight = 150;\n  this.thumbsWidth = 0;\n}\n\nGallery.prototype.initialize = function () {\n\n  this.getData();\n};\n\nGallery.prototype.createCORSRequest = function (method, url) {\n\n  var xhr = new XMLHttpRequest();\n  if ('withCredentials' in xhr) {\n\n    // Check if the XMLHttpRequest object has a \"withCredentials\" property.\n    // \"withCredentials\" only exists on XMLHTTPRequest2 objects.\n    xhr.open(method, url, true);\n  } else if (typeof XDomainRequest != 'undefined') {\n\n    // Otherwise, check if XDomainRequest.\n    // XDomainRequest only exists in IE, and is IE's way of making CORS requests.\n    xhr = new XDomainRequest();\n    xhr.open(method, url);\n  } else {\n\n    // Otherwise, CORS is not supported by the browser.\n    xhr = null;\n  }\n  // console.log(xhr);\n  return xhr;\n};\n\nGallery.prototype.getData = function () {\n\n  var self = this;\n\n  var url = 'images.json';\n\n  var xhr = self.createCORSRequest('GET', url);\n\n  if (!xhr) {\n    throw new Error('CORS not supported');\n  }\n\n  // Response handlers.\n  xhr.onload = function () {\n    var responseText = xhr.responseText;\n\n    self.handleResponse(responseText);\n    // console.log(parsedJSON);\n\n  };\n\n  xhr.onerror = function () {\n\n    console.log('Woops, there was an error making the request.');\n  };\n\n  xhr.send();\n};\n\nGallery.prototype.handleResponse = function (response) {\n\n  var self = this;\n\n  self.initiateData(response);\n\n  self.showData();\n};\n\nGallery.prototype.showData = function () {\n  var self = this;\n\n  var galleryItems = self.data;\n\n  var galleryContainer = [].slice.call(document.querySelectorAll(this.galleryWrapper));\n\n  galleryContainer.forEach(function (el) {\n\n    self.fillGallery(el, galleryItems);\n\n    self.addThumbs(el, galleryItems);\n  });\n};\n\n/* method: User::initiateData()\n * parses data from JSON representation \n */\n\nGallery.prototype.initiateData = function (imagesString) {\n\n  var self = this;\n\n  var items = JSON.parse(imagesString);\n\n  var limittedArray = items.slice(0, this.dataAmount);\n\n  // console.log(limittedArray);\n\n\n  limittedArray.map(function (el) {\n\n    self.data.push(el);\n  });\n\n  // console.log(self.data);\n};\n\nGallery.prototype.fillGallery = function (el, data) {\n\n  var galleryId = this.id;\n  galleryId++;\n\n  var items = data;\n  var itemsAmount = items.length;\n\n  var galleryContainer = el;\n  var galleryMinHeight = el.offsetHeight;\n\n  // console.log(el,galleryMinHeight);\n\n  var gallery = document.createElement('div');\n\n  gallery.classList.add('gallery', 'js-gallery');\n  gallery.style.minHeight = galleryMinHeight - this.thumbsHeight + 'px';\n\n  galleryContainer.appendChild(gallery);\n\n  var galleryMaxWidth = gallery.offsetWidth;\n\n  this.thumbsWidth = galleryMaxWidth;\n\n  var galleryList = document.createElement('ul');\n\n  galleryList.classList.add('gallery__list', 'js-gallery-list');\n  galleryList.style.minHeight = galleryMinHeight - this.thumbsHeight + 'px';\n\n  for (var j = 0; j < itemsAmount; j++) {\n\n    var galleryItem = document.createElement('li');\n    galleryItem.classList.add('gallery__item', 'js-gallery-item');\n\n    var galleryItemID = 'slide' + items[j].id;\n    galleryItem.setAttribute('id', galleryItemID);\n\n    galleryItem.style.maxWidth = galleryMaxWidth + 'px';\n\n    galleryItem.innerHTML = '<img src=\"' + items[j].url + '\" class=\"gallery__img\"> ';\n\n    galleryList.appendChild(galleryItem);\n  }\n\n  // console.log(galleryList);\n\n\n  gallery.appendChild(galleryList);\n\n  // if (!this.prevSlide) {\n\n  //   let prevSlideBtn=document.createElement('button');\n  //       prevSlideBtn.classList.add(this.prevSlide)\n  // }\n\n\n  this.navigation(galleryContainer, galleryList);\n};\n\nGallery.prototype.navigation = function (galleryContainer, galleryList) {\n\n  var self = this;\n\n  var thisGalleryWrapper = galleryContainer;\n  var thisGalleryList = galleryList;\n  // console.log(thisGalleryWrapper);\n\n  var thisGalleryChildren = [].slice.call(thisGalleryWrapper.children);\n\n  // console.log(thisGalleryChildren);\n\n\n  var nextSlideButton = thisGalleryChildren.filter(function (el) {\n\n    if (el.classList.contains(self.nextSlideBtn)) {\n      return el;\n    }\n  });\n\n  // console.log(nextSlideButton);\n\n\n  var prevSlideButton = thisGalleryChildren.filter(function (el) {\n\n    if (el.classList.contains(self.prevSlideBtn)) {\n      return el;\n    }\n  });\n\n  // console.log(prevSlideButton);\n\n  var gallery = thisGalleryChildren.filter(function (el) {\n\n    if (el.classList.contains(self.gallery)) {\n      return el;\n    }\n  });\n\n  // console.log(thisGalleryList);\n\n  var slides = [].slice.call(thisGalleryList.childNodes);\n\n  // console.log(slides);\n\n\n  // let firstSlides;\n\n\n  // if(self.currentSlide===0) {\n\n\n  //   slides.forEach(function(el,i) {\n\n  //     firstSlides.push(i[0]);\n\n  //   });\n\n\n  // } else if (self.currentSlide >= 0) {\n\n\n  //   firstSlides= slides.filter(function(el) {\n\n  //     if(el.getAttribute('id')==='slide1') return el;\n\n  //   });\n\n\n  // }\n\n\n  var firstSlides = slides.filter(function (el) {\n\n    if (el.getAttribute('id') === 'slide1') return el;\n  });\n\n  // console.log(firstSlides);\n\n  // let currentSlide = this.currentSlide;\n\n\n  firstSlides.forEach(function (el) {\n\n    el.classList.add('is-visible');\n  });\n\n  this.nextSlide(slides, nextSlideButton);\n  this.prevSlide(slides, prevSlideButton);\n};\n\nGallery.prototype.nextSlide = function (allSlides, nextBtn) {\n\n  var nextSlideBtn = nextBtn;\n  var slides = allSlides;\n  var self = this;\n  // let self.currentIndex= self.self.currentIndexndex;\n  // let currentSlide=self.currentSlide;\n\n  var currentSlider = slides.filter(function (el) {\n\n    if (el.classList.contains('is-visible')) {\n      return el;\n    }\n  });\n\n  currentSlider.forEach(function (element, index, array) {\n\n    self.currentIndex = slides.indexOf(array[index]);\n\n    // console.log(slides,currentSlide,self.currentIndex);\n\n\n    nextSlideBtn.forEach(function (e) {\n\n      // console.log(slides,currentSlide);\n\n      e.addEventListener('click', function (event) {\n\n        slides[self.currentIndex].classList.toggle('is-visible');\n\n        self.currentIndex = (self.currentIndex + 1) % slides.length;\n\n        slides[self.currentIndex].classList.toggle('is-visible');\n\n        console.log(self.self.currentIndexndex);\n      });\n    });\n  });\n};\n\nGallery.prototype.prevSlide = function (allSlides, prevBtn) {\n\n  var self = this;\n  var slides = allSlides;\n  // let self.currentIndex= self.self.currentIndexndex;\n  var lastSlider = slides.length - 1;\n\n  var prevSlideBtn = prevBtn;\n\n  var currentSlider = slides.filter(function (el) {\n\n    if (el.classList.contains('is-visible')) {\n      return el;\n    }\n  });\n\n  currentSlider.forEach(function (element, index, array) {\n\n    self.currentIndex = slides.indexOf(array[index]);\n\n    prevSlideBtn.forEach(function (el) {\n\n      el.addEventListener('click', function (event) {\n\n        console.log(self.currentIndex);\n\n        console.log(slides);\n\n        slides[self.currentIndex].classList.toggle('is-visible');\n\n        if (self.currentIndex < 0) {\n\n          console.log('<0');\n          self.currentIndex = lastSlider;\n        } else if (self.currentIndex > 0 && self.currentIndex < lastSlider) {\n\n          console.log('>0');\n          self.currentIndex--;\n        } else if (self.currentIndex = lastSlide) {\n          self.currentIndex = 0;\n        }\n\n        slides[self.currentIndex].classList.toggle('is-visible');\n\n        // console.log(self.currentIndex);\n      });\n    });\n  });\n};\n\nGallery.prototype.addThumbs = function (galleryContainer, galleryItems) {\n\n  var self = this;\n  // let thumbsUrl = [];\n  var data = galleryItems;\n  var container = galleryContainer;\n\n  // console.log(data);\n\n\n  var thumbsUrl = data.map(function (el) {\n\n    return el.thumbnailUrl;\n  });\n\n  var thumbsHTML = document.createElement('div');\n\n  thumbsHTML.style.minHeight = this.thumbsHeight + 'px';\n  thumbsHTML.classList.add('g-thumbnails');\n\n  var thumbsHTMLList = document.createElement('ul');\n\n  thumbsHTML.style.minHeight = this.thumbsHeight + 'px';\n  thumbsHTML.classList.add('g-thumbnails__list');\n\n  for (var i = 0; i < thumbsUrl.length; i++) {\n\n    var thumbsHTMLItem = document.createElement('li');\n\n    thumbsHTML.style.maxWidth = this.thumbsWidth + 'px';\n    thumbsHTML.classList.add('g-thumbnails__item');\n  }\n\n  thumbsHTML.appendChild(thumbsHTMLList);\n\n  // console.log(container);\n\n\n  container.appendChild(thumbsHTML);\n};\n\nGallery.prototype.addLoader = function () {};\n\nGallery.prototype.fullScreenMode = function () {};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(0);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvanMvYXBwLmpzPzcxNmYiXSwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgJy4vc2xpZGVyJztcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvanMvYXBwLmpzIl0sIm1hcHBpbmdzIjoiOztBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n");

/***/ })
/******/ ]);